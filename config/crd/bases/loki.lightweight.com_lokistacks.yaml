---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: lokistacks.loki.lightweight.com
spec:
  group: loki.lightweight.com
  names:
    kind: LokiStack
    listKind: LokiStackList
    plural: lokistacks
    singular: lokistack
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LokiStack is the Schema for the LokiStacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              hashRing:
                description: HashRing defines the spec for the distributed hash ring
                  configuration.
                properties:
                  memberlist:
                    description: MemberList configuration spec
                    properties:
                      enableIPv6:
                        description: "EnableIPv6 enables IPv6 support for the memberlist
                          based hash ring. \n Currently this also forces the instanceAddrType
                          to podIP to avoid local address lookup for the memberlist."
                        type: boolean
                      instanceAddrType:
                        description: InstanceAddrType defines the type of address
                          to use to advertise to the ring. Defaults to the first address
                          from any private network interfaces of the current pod.
                          Alternatively the public pod IP can be used in case private
                          networks (RFC 1918 and RFC 6598) are not available.
                        enum:
                        - default
                        - podIP
                        type: string
                    type: object
                  type:
                    default: memberlist
                    description: Type of hash ring implementation that should be used
                    enum:
                    - memberlist
                    type: string
                required:
                - type
                type: object
              limits:
                description: Limits defines the limits to be applied to log stream
                  processing.
                properties:
                  global:
                    description: Global defines the limits applied globally across
                      the cluster.
                    properties:
                      ingestion:
                        description: IngestionLimits defines the limits applied on
                          ingested log streams.
                        properties:
                          ingestionBurstSize:
                            description: IngestionBurstSize defines the local rate-limited
                              sample size per distributor replica. It should be set
                              to the set at least to the maximum logs size expected
                              in a single push request.
                            format: int32
                            type: integer
                          ingestionRate:
                            description: IngestionRate defines the sample size per
                              second. Units MB.
                            format: int32
                            type: integer
                          maxGlobalStreamsPerTenant:
                            description: MaxGlobalStreamsPerTenant defines the maximum
                              number of active streams per tenant, across the cluster.
                            format: int32
                            type: integer
                          maxLabelNameLength:
                            description: MaxLabelNameLength defines the maximum number
                              of characters allowed for label keys in log streams.
                            format: int32
                            type: integer
                          maxLabelNamesPerSeries:
                            description: MaxLabelNamesPerSeries defines the maximum
                              number of label names per series in each log stream.
                            format: int32
                            type: integer
                          maxLabelValueLength:
                            description: MaxLabelValueLength defines the maximum number
                              of characters allowed for label values in log streams.
                            format: int32
                            type: integer
                          maxLineSize:
                            description: MaxLineSize defines the maximum line size
                              on ingestion path. Units in Bytes.
                            format: int32
                            type: integer
                          perStreamDesiredRate:
                            description: PerStreamDesiredRate defines the desired
                              ingestion rate per second that LokiStack should target
                              applying automatic stream sharding. Units MB.
                            format: int32
                            type: integer
                          perStreamRateLimit:
                            description: PerStreamRateLimit defines the maximum byte
                              rate per second per stream. Units MB.
                            format: int32
                            type: integer
                          perStreamRateLimitBurst:
                            description: PerStreamRateLimitBurst defines the maximum
                              burst bytes per stream. Units MB.
                            format: int32
                            type: integer
                        type: object
                      queries:
                        description: QueryLimits defines the limit applied on querying
                          log streams.
                        properties:
                          cardinalityLimit:
                            description: CardinalityLimit defines the cardinality
                              limit for index queries.
                            format: int32
                            type: integer
                          maxChunksPerQuery:
                            description: MaxChunksPerQuery defines the maximum number
                              of chunks that can be fetched by a single query.
                            format: int32
                            type: integer
                          maxEntriesLimitPerQuery:
                            description: MaxEntriesLimitsPerQuery defines the maximum
                              number of log entries that will be returned for a query.
                            format: int32
                            type: integer
                          maxQuerySeries:
                            description: MaxQuerySeries defines the maximum of unique
                              series that is returned by a metric query.
                            format: int32
                            type: integer
                          maxVolumeSeries:
                            description: MaxVolumeSeries defines the maximum number
                              of aggregated series in a log-volume response
                            format: int32
                            type: integer
                          queryTimeout:
                            default: 3m
                            description: Timeout when querying ingesters or storage
                              during the execution of a query request.
                            type: string
                        type: object
                    type: object
                type: object
              proxy:
                description: Proxy defines the spec for the object proxy to configure
                  cluster proxy information.
                properties:
                  httpProxy:
                    description: HTTPProxy configures the HTTP_PROXY/http_proxy env
                      variable.
                    type: string
                  httpsProxy:
                    description: HTTPSProxy configures the HTTPS_PROXY/https_proxy
                      env variable.
                    type: string
                  noProxy:
                    description: NoProxy configures the NO_PROXY/no_proxy env variable.
                    type: string
                type: object
              replication:
                description: Replication defines the configuration for Loki data replication.
                properties:
                  factor:
                    description: Factor defines the policy for log stream replication.
                    format: int32
                    minimum: 1
                    type: integer
                  zones:
                    description: 'Zones defines an array of ZoneSpec that the scheduler
                      will try to satisfy. IMPORTANT: Make sure that the replication
                      factor defined is less than or equal to the number of available
                      zones.'
                    items:
                      description: ZoneSpec defines the spec to support zone-aware
                        component deployments.
                      properties:
                        maxSkew:
                          default: 1
                          description: MaxSkew describes the maximum degree to which
                            Pods can be unevenly distributed.
                          type: integer
                        topologyKey:
                          description: TopologyKey is the key that defines a topology
                            in the Nodes' labels.
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      type: object
                    type: array
                type: object
              size:
                description: Size defines one of the support Loki deployment scale
                  out sizes.
                enum:
                - 1x.demo
                - 1x.extra-small
                - 1x.small
                - 1x.medium
                type: string
              storage:
                description: Storage defines the spec for the object storage endpoint
                  to store logs.
                properties:
                  schemas:
                    default:
                    - effectiveDate: "2020-10-11"
                      version: v11
                    description: Schemas for reading and writing logs.
                    items:
                      description: ObjectStorageSchema defines a schema version and
                        the date when it will become effective.
                      properties:
                        effectiveDate:
                          description: "EffectiveDate contains a date in YYYY-MM-DD
                            format which is interpreted in the UTC time zone. \n The
                            configuration always needs at least one schema that is
                            currently valid. This means that when creating a new LokiStack
                            it is recommended to add a schema with the latest available
                            version and an effective date of \"yesterday\". New schema
                            versions added to the configuration always needs to be
                            placed \"in the future\", so that Loki can start using
                            it once the day rolls over."
                          pattern: ^([0-9]{4,})([-]([0-9]{2})){2}$
                          type: string
                        version:
                          description: Version for writing and reading logs.
                          enum:
                          - v11
                          - v12
                          - v13
                          type: string
                      required:
                      - effectiveDate
                      - version
                      type: object
                    minItems: 1
                    type: array
                  secret:
                    description: Secret for object storage authentication. Name of
                      a secret in the same namespace as the LokiStack custom resource.
                    properties:
                      name:
                        description: Name of a secret in the namespace configured
                          for object storage secrets.
                        type: string
                      type:
                        description: Type of object storage that should be used
                        enum:
                        - azure
                        - gcs
                        - s3
                        - swift
                        - alibabacloud
                        type: string
                    required:
                    - name
                    - type
                    type: object
                required:
                - secret
                type: object
              storageClassName:
                description: Storage class name defines the storage class for ingester/querier
                  PVCs.
                type: string
            required:
            - size
            - storage
            - storageClassName
            type: object
          status:
            description: LokiStackStatus defines the observed state of LokiStack
            properties:
              conditions:
                description: Conditions of the Loki deployment health.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              storage:
                description: Storage provides summary of all changes that have occurred
                  to the storage configuration.
                properties:
                  credentialMode:
                    description: CredentialMode contains the authentication mode used
                      for accessing the object storage.
                    enum:
                    - static
                    - token
                    - token-cco
                    type: string
                  schemas:
                    description: Schemas is a list of schemas which have been applied
                      to the LokiStack.
                    items:
                      description: ObjectStorageSchema defines a schema version and
                        the date when it will become effective.
                      properties:
                        effectiveDate:
                          description: "EffectiveDate contains a date in YYYY-MM-DD
                            format which is interpreted in the UTC time zone. \n The
                            configuration always needs at least one schema that is
                            currently valid. This means that when creating a new LokiStack
                            it is recommended to add a schema with the latest available
                            version and an effective date of \"yesterday\". New schema
                            versions added to the configuration always needs to be
                            placed \"in the future\", so that Loki can start using
                            it once the day rolls over."
                          pattern: ^([0-9]{4,})([-]([0-9]{2})){2}$
                          type: string
                        version:
                          description: Version for writing and reading logs.
                          enum:
                          - v11
                          - v12
                          - v13
                          type: string
                      required:
                      - effectiveDate
                      - version
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
