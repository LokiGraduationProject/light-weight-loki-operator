{{- /*gotype: github.com/LokiGraduationProject/light-weight-loki-operator/handlers/manifests/internal/config.Options*/ -}}
---
auth_enabled: true
chunk_store_config:
  chunk_cache_config:
    embedded_cache:
      enabled: true
      max_size_mb: 500
common:
  storage:
    {{- with .ObjectStorage.S3 }}
    s3:
      {{- if .STS }}
      bucketnames: {{.Buckets}}
      region: {{.Region}}
      s3forcepathstyle: false
      {{- else }}
      endpoint: {{ .Endpoint }}
      bucketnames: {{ .Buckets }}
      region: {{ .Region }}
      access_key_id: ${AWS_ACCESS_KEY_ID}
      secret_access_key: ${AWS_ACCESS_KEY_SECRET}
      {{- if .ForcePathStyle  }}
      s3forcepathstyle: true
      {{- end}}
      {{- end }}
      {{- with .SSE }}
      {{- if .Type }}
      sse:
        type: {{ .Type }}
        {{- if eq .Type "SSE-KMS" }}
        kms_key_id: {{ .KMSKeyID }}
        {{- with .KMSEncryptionContext }}
        kms_encryption_context: |
          ${AWS_SSE_KMS_ENCRYPTION_CONTEXT}
        {{- end }}
        {{- end}}
      {{- end }}
      {{- end }}
    {{- end }}
  compactor_grpc_address: {{ .Compactor.FQDN }}:{{ .Compactor.Port }}
  {{- with .GossipRing }}
  ring:
    kvstore:
      store: memberlist
    heartbeat_period: 5s
    heartbeat_timeout: 1m
    {{- with .InstanceAddr }}
    instance_addr: {{ . }}
    {{- end }}
    instance_port: {{ .InstancePort }}
    {{- if .EnableInstanceAvailabilityZone }}
    zone_awareness_enabled: true
    instance_availability_zone: ${INSTANCE_AVAILABILITY_ZONE}
    {{- end }}
  {{- end }}
compactor:
  compaction_interval: 2h
  working_directory: {{ .StorageDirectory }}/compactor
frontend:
  tail_proxy_url: {{ .Querier.Protocol }}://{{ .Querier.FQDN }}:{{ .Querier.Port }}
  compress_responses: true
  max_outstanding_per_tenant: 4096
  log_queries_longer_than: 5s
frontend_worker:
  frontend_address: {{ .FrontendWorker.FQDN }}:{{ .FrontendWorker.Port }}
  grpc_client_config:
    max_send_msg_size: 104857600
ingester:
  chunk_block_size: 262144
  chunk_encoding: snappy
  chunk_idle_period: 1h
  chunk_retain_period: 5m
  chunk_target_size: 2097152
  flush_op_timeout: 10m
  max_chunk_age: 2h
  lifecycler:
    final_sleep: 0s
    join_after: 30s
    num_tokens: 512
    ring:
      replication_factor: 1
  wal:
    enabled: false
ingester_client:
  grpc_client_config:
    max_recv_msg_size: 67108864
  remote_timeout: 1s
# NOTE: Keep the order of keys as in Loki docs
# to enable easy diffs when vendoring newer
# Loki releases.
# (See https://grafana.com/docs/loki/latest/configuration/#limits_config)
#
# Values for not exposed fields are taken from the grafana/loki production
# configuration manifests.
# (See https://github.com/grafana/loki/blob/main/production/ksonnet/loki/config.libsonnet)
limits_config:
  ingestion_rate_strategy: global
  ingestion_rate_mb: {{ .Stack.Limits.Global.IngestionLimits.IngestionRate }}
  ingestion_burst_size_mb: {{ .Stack.Limits.Global.IngestionLimits.IngestionBurstSize }}
  max_label_name_length: {{ .Stack.Limits.Global.IngestionLimits.MaxLabelNameLength }}
  max_label_value_length: {{ .Stack.Limits.Global.IngestionLimits.MaxLabelValueLength }}
  max_label_names_per_series: {{ .Stack.Limits.Global.IngestionLimits.MaxLabelNamesPerSeries }}
  reject_old_samples: true
  reject_old_samples_max_age: 168h
  creation_grace_period: 10m
  # Keep max_streams_per_user always to 0 to default
  # using max_global_streams_per_user always.
  # (See https://github.com/grafana/loki/blob/main/pkg/ingester/limiter.go#L73)
  max_streams_per_user: 0
  max_line_size: {{ .Stack.Limits.Global.IngestionLimits.MaxLineSize }}
  max_entries_limit_per_query: {{ .Stack.Limits.Global.QueryLimits.MaxEntriesLimitPerQuery }}
  max_global_streams_per_user: {{ .Stack.Limits.Global.IngestionLimits.MaxGlobalStreamsPerTenant }}
  max_chunks_per_query: {{ .Stack.Limits.Global.QueryLimits.MaxChunksPerQuery }}
  max_query_length: 721h
  max_query_parallelism: 32
  tsdb_max_query_parallelism: 512
  max_query_series: {{ .Stack.Limits.Global.QueryLimits.MaxQuerySeries }}
  cardinality_limit: {{ .Stack.Limits.Global.QueryLimits.CardinalityLimit }}
  max_streams_matchers_per_query: 1000
  query_timeout: {{ .Stack.Limits.Global.QueryLimits.QueryTimeout }}
  volume_enabled: true
  volume_max_series: {{ .Stack.Limits.Global.QueryLimits.MaxVolumeSeries }}
  max_cache_freshness_per_query: 10m
  per_stream_rate_limit: {{ .Stack.Limits.Global.IngestionLimits.PerStreamRateLimit }}MB
  per_stream_rate_limit_burst: {{ .Stack.Limits.Global.IngestionLimits.PerStreamRateLimitBurst }}MB
  split_queries_by_interval: 30m
  allow_structured_metadata: {{ .ObjectStorage.AllowStructuredMetadata }}
{{- with .GossipRing }}
memberlist:
  abort_if_cluster_join_fails: true
  {{- with .InstanceAddr }}
  advertise_addr: {{ . }}
  {{- end }}
  advertise_port: {{ .BindPort }}
  bind_port: {{ .BindPort }}
  join_members:
    - {{ .MembersDiscoveryAddr }}:{{ .BindPort }}
  max_join_backoff: 1m
  max_join_retries: 10
  min_join_backoff: 1s
{{- end }}
querier:
  engine:
    max_look_back_period: 30s
  extra_query_delay: 0s
  query_ingesters_within: 3h
  tail_max_duration: 1h
  max_concurrent: {{ .MaxConcurrent.AvailableQuerierCPUCores }}
query_range:
  align_queries_with_step: true
  cache_results: true
  max_retries: 5
  results_cache:
    cache:
      embedded_cache:
        enabled: true
        max_size_mb: 500
  parallelise_shardable_queries: true
schema_config:
  configs:
    {{- $store := .ObjectStorage.SharedStore }}
    {{- range .ObjectStorage.Schemas }}
    - from: "{{ .EffectiveDate }}"
      index:
        period: 24h
        prefix: index_
      object_store: {{ $store }}
      schema: {{ .Version }}
      {{- if or (eq .Version "v11") (eq .Version "v12")}}
      store: boltdb-shipper
      {{- else }}
      store: tsdb
      {{- end}}
    {{- end }}
server:
  graceful_shutdown_timeout: 5s
  grpc_server_min_time_between_pings: '10s'
  grpc_server_ping_without_stream_allowed: true
  grpc_server_max_concurrent_streams: 1000
  grpc_server_max_recv_msg_size: 104857600
  grpc_server_max_send_msg_size: 104857600
  http_listen_port: 3100
  http_server_idle_timeout: {{ .HTTPTimeouts.IdleTimeout }}
  http_server_read_timeout: {{ .HTTPTimeouts.ReadTimeout }}
  http_server_write_timeout: {{ .HTTPTimeouts.WriteTimeout }}
  log_level: info
storage_config:
{{- range $_, $ship := .Shippers }}
{{- if eq $ship "boltdb" }}
  boltdb_shipper:
    active_index_directory: {{ $.StorageDirectory }}/index
    cache_location: {{ $.StorageDirectory }}/index_cache
{{- end }}
{{- if eq $ship "tsdb" }}
  tsdb_shipper:
    active_index_directory: {{ $.StorageDirectory }}/tsdb-index
    cache_location: {{ $.StorageDirectory }}/tsdb-cache
{{- end }}
    cache_ttl: 24h
    resync_interval: 5m
    index_gateway_client:
      server_address: dns:///{{ $.IndexGateway.FQDN }}:{{ $.IndexGateway.Port }}
{{- end }}
tracing:
  enabled: false
analytics:
  reporting_enabled: {{ .EnableRemoteReporting }}
